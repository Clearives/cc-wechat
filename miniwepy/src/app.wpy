<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/auth'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  async getUserInfo(cb) {
    let that = this
    let res = await wepy.getSetting()
    if ((res.authSetting)['scope.userInfo']) {
      let userInfo = wepy.getStorageSync('USER_INFO')
      if (!userInfo.nickName) {
        let data = await wepy.getUserInfo()
        if (data) {
          that.globalData.userInfo = data.userInfo
          cb && cb(data.userInfo)
          wepy.setStorageSync('USER_INFO', data.userInfo)
        }
        let res = await wepy.login()
        if (res.code) {
          let systemInfo = wepy.getSystemInfoSync()
          wepy.setStorageSync('SYSTEM_INFO', systemInfo)
        }
      } else {
        that.globalData.userInfo = userInfo
        cb && cb(userInfo)
      }
    } else {
      wepy.redirectTo({
        url: '/pages/auth'
      })
    }
  }
}
</script>
